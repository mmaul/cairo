// Ported from cairo tutorial at http://cairographics.org/tutorial/
include "Cairo/cairo";
open Cairo;
open C_hack;

fun main () = {
  var surface = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, 120, 120);
  var cr = cairo_create (surface);

  /* Examples are in 1.0 x 1.0 coordinate space */
  cairo_scale (cr, 120.0, 120.0);

  /* Drawing code goes here */
  var radpat = cairo_pattern_create_radial (0.25, 0.25, 0.1,  0.5, 0.5, 0.5);
  cairo_pattern_add_color_stop_rgb (radpat, 0.0,  1.0, 0.8, 0.8);
  cairo_pattern_add_color_stop_rgb (radpat, 1.0,  0.9, 0.0, 0.0);

  for var i in 1 upto 10 do
    for var j in 1 upto 10 do
      cairo_rectangle (cr, double(i)/10.0 - 0.04, double(j)/10.0 - 0.04, 0.08, 0.08);
    done
  done
  cairo_set_source (cr, radpat);
  cairo_fill (cr);

  var linpat = cairo_pattern_create_linear (0.25, 0.35, 0.75, 0.65);
  cairo_pattern_add_color_stop_rgba (linpat, 0.00,  1.0, 1.0, 1.0, 0.0);
  cairo_pattern_add_color_stop_rgba (linpat, 0.25,  0.0, 1.0, 0.0, 0.5);
  cairo_pattern_add_color_stop_rgba (linpat, 0.50,  1.0, 1.0, 1.0, 0.0);
  cairo_pattern_add_color_stop_rgba (linpat, 0.75,  0.0, 0.0, 1.0, 0.5);
  cairo_pattern_add_color_stop_rgba (linpat, 1.00,  1.0, 1.0, 1.0, 0.0);

  cairo_rectangle (cr, 0.0, 0.0, 1.0, 1.0);
  cairo_set_source (cr, linpat);
  cairo_fill (cr);

  /* Write output and clean up */
  ignore(cairo_surface_write_to_png (surface, cast[&char](cstr("setsourcegradient.png"))));
  cairo_destroy (cr);
  cairo_surface_destroy (surface);

  return 0;
}

System::exit(main());